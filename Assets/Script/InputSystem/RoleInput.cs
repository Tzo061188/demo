//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Script/InputSystem/Role.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @RoleInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @RoleInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Role"",
    ""maps"": [
        {
            ""name"": ""Role"",
            ""id"": ""93c18a8b-8971-4ffe-afdb-5b48687aada9"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""69de3a95-fa30-433a-adc4-d4d60ab1d291"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""b11924e2-cb82-491a-ac31-8274811d68b6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""a76019f0-89f6-45b1-83f8-f84a53389ef4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Button"",
                    ""id"": ""b618047b-e8d5-4faa-9ae4-cb09e8b2eecb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""1e3b5822-c6ba-48ca-a640-5af8fc04ccfd"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""FinishSkill"",
                    ""type"": ""Button"",
                    ""id"": ""76968129-8ab9-40f9-86cb-bb63713aff78"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NormalSkill"",
                    ""type"": ""Button"",
                    ""id"": ""69cf8e9f-0b9a-43d2-b134-46590ad60d06"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HeavyAttack"",
                    ""type"": ""Button"",
                    ""id"": ""528d4aae-8429-4140-ae62-219bd7ed4ca2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": "" Bag"",
                    ""type"": ""Button"",
                    ""id"": ""5ec7d575-cd0c-4729-89d1-5e22906edfae"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Esc"",
                    ""type"": ""Button"",
                    ""id"": ""045940ca-da7a-498e-83b9-25ee3aa0c1cd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeItem"",
                    ""type"": ""Button"",
                    ""id"": ""998f9461-fc46-49da-85ea-aee7315669e7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interactive"",
                    ""type"": ""Button"",
                    ""id"": ""8b30733a-27da-480c-be0a-cc0abfc7e00d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""e0ddc1bb-bf7d-4134-a533-53e83b410af4"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""ac950c06-0c0d-44f8-aa00-eb8439b9bad0"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""e2c8d167-e58e-4895-b7b6-d27afcf4e041"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""c4138daa-2e01-4fe4-b264-258c1dcb2022"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""3d18e6c8-557c-40de-bfe4-e5f155cdce01"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""3423bef9-f18d-40e1-bc99-c944eff4d6ee"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""75c8523e-c4c8-4fe1-b5fb-7207c8f5f086"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4691e869-9676-49e2-8e4e-999d5fa2dcfa"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fa058b35-8e58-4502-8fb8-c3352558eb01"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Test"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5331b2f9-1c12-47d6-b8f1-194d8008a83d"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Test"",
                    ""action"": ""FinishSkill"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""878f3385-03f3-4bc7-83d6-43ffa4e2330e"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Test"",
                    ""action"": ""NormalSkill"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6bae2e05-a0ce-485b-99af-5657c43b2759"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Test"",
                    ""action"": ""HeavyAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""62138745-3c47-4300-a418-6aa7cbc97524"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Test"",
                    ""action"": "" Bag"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""abaaf728-ec07-4391-b9d3-4dfdaff74c14"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Test"",
                    ""action"": ""Esc"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ef1a79d9-9ab3-4fd1-a742-0232b0dc06f2"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Test"",
                    ""action"": ""ChangeItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""346befbd-67bb-439e-9e91-979800ec1e5a"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Test"",
                    ""action"": ""Interactive"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Test"",
            ""bindingGroup"": ""Test"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Role
        m_Role = asset.FindActionMap("Role", throwIfNotFound: true);
        m_Role_Move = m_Role.FindAction("Move", throwIfNotFound: true);
        m_Role_Attack = m_Role.FindAction("Attack", throwIfNotFound: true);
        m_Role_Run = m_Role.FindAction("Run", throwIfNotFound: true);
        m_Role_Sprint = m_Role.FindAction("Sprint", throwIfNotFound: true);
        m_Role_Look = m_Role.FindAction("Look", throwIfNotFound: true);
        m_Role_FinishSkill = m_Role.FindAction("FinishSkill", throwIfNotFound: true);
        m_Role_NormalSkill = m_Role.FindAction("NormalSkill", throwIfNotFound: true);
        m_Role_HeavyAttack = m_Role.FindAction("HeavyAttack", throwIfNotFound: true);
        m_Role_Bag = m_Role.FindAction(" Bag", throwIfNotFound: true);
        m_Role_Esc = m_Role.FindAction("Esc", throwIfNotFound: true);
        m_Role_ChangeItem = m_Role.FindAction("ChangeItem", throwIfNotFound: true);
        m_Role_Interactive = m_Role.FindAction("Interactive", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Role
    private readonly InputActionMap m_Role;
    private List<IRoleActions> m_RoleActionsCallbackInterfaces = new List<IRoleActions>();
    private readonly InputAction m_Role_Move;
    private readonly InputAction m_Role_Attack;
    private readonly InputAction m_Role_Run;
    private readonly InputAction m_Role_Sprint;
    private readonly InputAction m_Role_Look;
    private readonly InputAction m_Role_FinishSkill;
    private readonly InputAction m_Role_NormalSkill;
    private readonly InputAction m_Role_HeavyAttack;
    private readonly InputAction m_Role_Bag;
    private readonly InputAction m_Role_Esc;
    private readonly InputAction m_Role_ChangeItem;
    private readonly InputAction m_Role_Interactive;
    public struct RoleActions
    {
        private @RoleInput m_Wrapper;
        public RoleActions(@RoleInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Role_Move;
        public InputAction @Attack => m_Wrapper.m_Role_Attack;
        public InputAction @Run => m_Wrapper.m_Role_Run;
        public InputAction @Sprint => m_Wrapper.m_Role_Sprint;
        public InputAction @Look => m_Wrapper.m_Role_Look;
        public InputAction @FinishSkill => m_Wrapper.m_Role_FinishSkill;
        public InputAction @NormalSkill => m_Wrapper.m_Role_NormalSkill;
        public InputAction @HeavyAttack => m_Wrapper.m_Role_HeavyAttack;
        public InputAction @Bag => m_Wrapper.m_Role_Bag;
        public InputAction @Esc => m_Wrapper.m_Role_Esc;
        public InputAction @ChangeItem => m_Wrapper.m_Role_ChangeItem;
        public InputAction @Interactive => m_Wrapper.m_Role_Interactive;
        public InputActionMap Get() { return m_Wrapper.m_Role; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(RoleActions set) { return set.Get(); }
        public void AddCallbacks(IRoleActions instance)
        {
            if (instance == null || m_Wrapper.m_RoleActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_RoleActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Attack.started += instance.OnAttack;
            @Attack.performed += instance.OnAttack;
            @Attack.canceled += instance.OnAttack;
            @Run.started += instance.OnRun;
            @Run.performed += instance.OnRun;
            @Run.canceled += instance.OnRun;
            @Sprint.started += instance.OnSprint;
            @Sprint.performed += instance.OnSprint;
            @Sprint.canceled += instance.OnSprint;
            @Look.started += instance.OnLook;
            @Look.performed += instance.OnLook;
            @Look.canceled += instance.OnLook;
            @FinishSkill.started += instance.OnFinishSkill;
            @FinishSkill.performed += instance.OnFinishSkill;
            @FinishSkill.canceled += instance.OnFinishSkill;
            @NormalSkill.started += instance.OnNormalSkill;
            @NormalSkill.performed += instance.OnNormalSkill;
            @NormalSkill.canceled += instance.OnNormalSkill;
            @HeavyAttack.started += instance.OnHeavyAttack;
            @HeavyAttack.performed += instance.OnHeavyAttack;
            @HeavyAttack.canceled += instance.OnHeavyAttack;
            @Bag.started += instance.OnBag;
            @Bag.performed += instance.OnBag;
            @Bag.canceled += instance.OnBag;
            @Esc.started += instance.OnEsc;
            @Esc.performed += instance.OnEsc;
            @Esc.canceled += instance.OnEsc;
            @ChangeItem.started += instance.OnChangeItem;
            @ChangeItem.performed += instance.OnChangeItem;
            @ChangeItem.canceled += instance.OnChangeItem;
            @Interactive.started += instance.OnInteractive;
            @Interactive.performed += instance.OnInteractive;
            @Interactive.canceled += instance.OnInteractive;
        }

        private void UnregisterCallbacks(IRoleActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Attack.started -= instance.OnAttack;
            @Attack.performed -= instance.OnAttack;
            @Attack.canceled -= instance.OnAttack;
            @Run.started -= instance.OnRun;
            @Run.performed -= instance.OnRun;
            @Run.canceled -= instance.OnRun;
            @Sprint.started -= instance.OnSprint;
            @Sprint.performed -= instance.OnSprint;
            @Sprint.canceled -= instance.OnSprint;
            @Look.started -= instance.OnLook;
            @Look.performed -= instance.OnLook;
            @Look.canceled -= instance.OnLook;
            @FinishSkill.started -= instance.OnFinishSkill;
            @FinishSkill.performed -= instance.OnFinishSkill;
            @FinishSkill.canceled -= instance.OnFinishSkill;
            @NormalSkill.started -= instance.OnNormalSkill;
            @NormalSkill.performed -= instance.OnNormalSkill;
            @NormalSkill.canceled -= instance.OnNormalSkill;
            @HeavyAttack.started -= instance.OnHeavyAttack;
            @HeavyAttack.performed -= instance.OnHeavyAttack;
            @HeavyAttack.canceled -= instance.OnHeavyAttack;
            @Bag.started -= instance.OnBag;
            @Bag.performed -= instance.OnBag;
            @Bag.canceled -= instance.OnBag;
            @Esc.started -= instance.OnEsc;
            @Esc.performed -= instance.OnEsc;
            @Esc.canceled -= instance.OnEsc;
            @ChangeItem.started -= instance.OnChangeItem;
            @ChangeItem.performed -= instance.OnChangeItem;
            @ChangeItem.canceled -= instance.OnChangeItem;
            @Interactive.started -= instance.OnInteractive;
            @Interactive.performed -= instance.OnInteractive;
            @Interactive.canceled -= instance.OnInteractive;
        }

        public void RemoveCallbacks(IRoleActions instance)
        {
            if (m_Wrapper.m_RoleActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IRoleActions instance)
        {
            foreach (var item in m_Wrapper.m_RoleActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_RoleActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public RoleActions @Role => new RoleActions(this);
    private int m_TestSchemeIndex = -1;
    public InputControlScheme TestScheme
    {
        get
        {
            if (m_TestSchemeIndex == -1) m_TestSchemeIndex = asset.FindControlSchemeIndex("Test");
            return asset.controlSchemes[m_TestSchemeIndex];
        }
    }
    public interface IRoleActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnFinishSkill(InputAction.CallbackContext context);
        void OnNormalSkill(InputAction.CallbackContext context);
        void OnHeavyAttack(InputAction.CallbackContext context);
        void OnBag(InputAction.CallbackContext context);
        void OnEsc(InputAction.CallbackContext context);
        void OnChangeItem(InputAction.CallbackContext context);
        void OnInteractive(InputAction.CallbackContext context);
    }
}
